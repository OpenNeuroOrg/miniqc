name: Hatch

on:
  push:
    branches:
      - main
      - maint/*
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - maint/*
  schedule:
    - cron: '0 0 * * MON'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.9', '3.10', '3.11']
        command: ['test:no-cov']
        include:
          - os: 'ubuntu-latest'
            python-version: '3'
            command: 'test:cov'
          - os: 'ubuntu-latest'
            python-version: '3'
            command: 'type:check'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Test
        run: hatch run ${{ matrix.command }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: 3
      - run: pip install --upgrade build twine
      - run: python -m build
      - run: twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  test-sdist:
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      matrix:
        os: ['ubuntu-latest']
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Unpack sdist
        run: tar xfvz dist/*.tar.gz
      - uses: actions/setup-python@v4
        with:
          python-version: 3
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Test
        run: cd miniqc-* && hatch run test:no-cov

  publish:
    runs-on: ubuntu-latest
    needs: [test, test-sdist]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
